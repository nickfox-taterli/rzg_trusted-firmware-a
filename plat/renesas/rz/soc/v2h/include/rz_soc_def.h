/*
 * Copyright (c) 2023, Renesas Electronics Corporation. All rights reserved.
 *
 * SPDX-License-Identifier: BSD-3-Clause
 */

#ifndef __RZ_SOC_DEF_H__
#define __RZ_SOC_DEF_H__

#include <lib/utils_def.h>

#define RZV2H_BOOT_ROM_BASE			UL(0x00000000)
#define RZV2H_AUTH_API_BASE			UL(0x00014300)
#define RZV2H_BOOT_RAM_BASE			UL(0x07F80000)
#define RZV2H_MSRAM_BASE			UL(0x08000000)
#define RZV2H_ASRAM_BASE			UL(0x08100000)
#define RZV2H_R8SRAM_BASE			UL(0x08180000)
#define RZV2H_DEVICE_BASE			UL(0x10000000)
#define RZV2H_ELC					UL(0x10400000)
#define RZV2H_GPIO_BASE				UL(0x10410000)
#define RZV2H_CPG_BASE				UL(0x10420000)
#define RZV2H_SYSC_BASE				UL(0x10430000)
#define RZV2H_TSIP_BASE				UL(0x10440000)
#define RZV2H_OTP_BASE				UL(0x10450000)
#define RZV2H_TZC400_M33_BASE		UL(0x10460000)
#define RZV2H_TZC400_xSPI_BASE		UL(0x10470000)
#define RZV2H_MHU_BASE				UL(0x10480000)
#define RZV2H_CLMA1_BASE			UL(0x10490000)
#define RZV2H_CLMA0_BASE			UL(0x104A0000)
#define RZV2H_CST_BASE				UL(0x10800000)
#define RZV2H_MCPU_SYS_BASE			UL(0x10C00000)
#define RZV2H_TSU0_BASE				UL(0x11000000)
#define RZV2H_TSU1_BASE				UL(0x11001000)
#define RZV2H_XSPI_BASE				UL(0x11030000)

#define	RZV2H_I2C_8_BASE			UL(0x11C01000)
#define RZV2H_SCIF_BASE				UL(0x11C01400)

#define RZV2H_TZC400_DDR00_BASE		UL(0x13C60000)
#define RZV2H_TZC400_DDR01_BASE		UL(0x13C70000)
#define RZV2H_TZC400_DDR10_BASE		UL(0x13C80000)
#define RZV2H_TZC400_DDR11_BASE		UL(0x13C90000)
#define RZV2H_TZC400_R8_BASE		UL(0x13CA0000)
#define RZV2H_TZC400_A55_BASE		UL(0x13CB0000)
#define RZV2H_TZC400_PCIe_BASE		UL(0x13CC0000)

#define RZV2H_SYC_BASE				UL(0x14010000)

#define RZV2H_GIC_BASE				UL(0x14900000)

#define RZV2H_SD0_BASE				UL(0x15C00000)
#define RZV2H_SD1_BASE				UL(0x15C10000)
#define RZV2H_SD2_BASE				UL(0x15C20000)

#define RZV2H_DDR0_PHY_BASE			UL(0x1A000000)
#define RZV2H_DDR1_PHY_BASE			UL(0x1C000000)
#define RZV2H_DDR0_MEMC_BASE		UL(0x1E000000)
#define RZV2H_DDR1_MEMC_BASE		UL(0x1E010000)

#define RZV2H_XSPI_MEMORY_MAP_BASE	ULL(0x20000000)
#define RZV2H_PCIe_MIRROR_BASE		ULL(0x30000000)
#define RZV2H_DDR0_BASE				ULL(0x40000000)
#define RZV2H_DDR1_BASE				ULL(0x240000000)
#define RZV2H_PCIe0_BASE			ULL(0x440000000)
#define RZV2H_PCIe1_BASE			ULL(0xA40000000)

#define RZV2H_GICD_BASE				(RZV2H_GIC_BASE)
#define RZV2H_GICR_BASE				(RZV2H_GIC_BASE + 0x00040000)

#define RZV2H_SRAM_BASE				RZV2H_MSRAM_BASE

#define RZV2H_SRAM_SIZE				UL(0x00080000)
#define RZV2H_BOOT_ROM_SIZE			(0x00020000 - RZV2H_BOOT_ROM_BASE)
#define RZV2H_BOOT_RAM_SIZE			(0x00001000)
#define RZV2H_MSRAM_SIZE			(RZV2H_SRAM_SIZE*2)
#define RZV2H_ASRAM_SIZE			RZV2H_SRAM_SIZE
#define RZV2H_R8SRAM_SIZE			RZV2H_SRAM_SIZE
#define RZV2H_DEVICE_SIZE			(0x20000000 - RZV2H_DEVICE_BASE)
#define RZV2H_XSPI_SIZE				(RZV2H_PCIe_MIRROR_BASE - RZV2H_XSPI_MEMORY_MAP_BASE)
#define RZV2H_DDR0_SIZE				(RZV2H_DDR1_BASE - RZV2H_DDR0_BASE)
#define RZV2H_DDR1_SIZE				(RZV2H_PCIe0_BASE - RZV2H_DDR1_BASE)

#define RZV2H_BL2_END_OFFSET		UL(0x00060000)					/* This value is not checked/enforced anywhwere */
/*
 * eSD boot mode has 4096 sectors. Therefore 4096 x 512bytes = 0x1000 x 0x200 = 0x200000.
 * 0x200000 - FIP start offset (RZV2H_BL2_END_OFFSET) = 0x200000 - 0x60000 = 0x1A0000 = 1.7MB
 */
#define RZV2H_FIP_SIZE_MAX			UL(0x001A0000)

#define RZV2H_SPIROM_FIP_BASE		(RZV2H_XSPI_MEMORY_MAP_BASE + RZV2H_BL2_END_OFFSET)
#define RZV2H_SPIROM_FIP_SIZE		RZV2H_FIP_SIZE_MAX

#define RZV2H_EMMC_FIP_BASE			RZV2H_BL2_END_OFFSET
#define RZV2H_EMMC_FIP_SIZE			RZV2H_FIP_SIZE_MAX

#define RZV2H_SD_FIP_BASE			RZV2H_BL2_END_OFFSET
#define RZV2H_SD_FIP_SIZE			RZV2H_FIP_SIZE_MAX

#define RZV2H_SPIROM_DDR_CFG_BASE	(RZV2H_SPIROM_FIP_BASE + RZV2H_FIP_SIZE_MAX + 0x00000001)
#define RZV2H_DDR_CONFIG_MAX		UL(0x00001000)

#define RZV2H_SYC_INCK_HZ			UL(24000000)
#define RZV2H_UART_INCK_HZ			UL(100000000)

#define RZV2H_UART_BARDRATE			UL(115200)

/* Boot Info base address for BL2 */
#define RZV2H_BOOTINFO_BASE			RZV2H_ASRAM_BASE
#define RZV2H_BOOTINFO_SIZE			UL(0x1000)

/* Definitions used in common code */

/* Base address where parameters to BL31 are stored */
#define PARAMS_BASE					BL2_LIMIT
#define PARAMS_SIZE					UL(0x1000)
#define RZ_SOC_BOOTINFO_BASE		RZV2H_BOOTINFO_BASE
#define BOOT_KIND_BASE				PARAMS_BASE

#define RZ_SOC_SYC_BASE				RZV2H_SYC_BASE

#define RZ_SOC_GICD_BASE			RZV2H_GICD_BASE
#define RZ_SOC_GICR_BASE			RZV2H_GICR_BASE

#define RZ_SOC_SPIROM_FIP_BASE		RZV2H_SPIROM_FIP_BASE
#define RZ_SOC_SPIROM_FIP_SIZE		RZV2H_SPIROM_FIP_SIZE

#define RZ_SOC_EMMC_FIP_BASE		RZV2H_EMMC_FIP_BASE
#define RZ_SOC_EMMC_FIP_SIZE		RZV2H_EMMC_FIP_SIZE

#define RZ_SOC_SD_FIP_BASE			RZV2H_SD_FIP_BASE
#define RZ_SOC_SD_FIP_SIZE			RZV2H_SD_FIP_SIZE

#define RZ_SOC_SPIROM_DDR_CFG_BASE	RZV2H_SPIROM_DDR_CFG_BASE
#define RZ_SOC_SPIROM_DDR_CFG_SIZE	RZV2H_DDR_CONFIG_MAX

#define RZ_SOC_OTP_BASE_PRODUCTID	SYS_LSI_PRR						/* OTPPRODUCT */

#define RZ_SOC_OTP_BASE_CHIPID		(RZV2H_OTP_BASE + 0x114C)		/* OTPCPID0 */
#define RZ_SOC_I2C_PMIC_BASE		RZV2H_I2C_8_BASE

#define SYS_BASE					RZV2H_SYSC_BASE
#define PFC_BASE					RZV2H_GPIO_BASE
#define CPG_BASE					RZV2H_CPG_BASE
#define XSPI_BASE					RZV2H_XSPI_BASE

#if TRUSTED_BOARD_BOOT
#define RZ_SOC_AUTH_API_BASE		RZV2H_AUTH_API_BASE
#endif

/* eMMC registers */
#define MMC0_SD_BASE				RZV2H_SD0_BASE
#define MMC1_SD_BASE				RZV2H_SD1_BASE
#define MMC2_SD_BASE				RZV2H_SD2_BASE

#define SYS_PCIE_REG_OFFSET_START	UL(0x1000)						/* Offset corresponds to register SYS_PCIE_INTX_CH0 */
#define SYS_PCIE_REG_OFFSET_END		UL(0x1054)						/* Offset corresponds to register SYS_PCIE_MODE_CH1 */

/* Error Interrupt CM33 Status Register k */
#define RZV2H_ELC_ERINTM33CTL(k)	(RZV2H_ELC + 0x0304 + ((k) * 0x004))

/* Error Interrupt CM33 Status Clear Register k */
#define RZV2H_ELC_ERINTM33CLR(k)	(RZV2H_ELC + 0x0314 + ((k) * 0x004))

/* Error Interrupt CA55 Status Register k */
#define RZV2H_ELC_ERINTA55CTL(k)	(RZV2H_ELC + 0x0338 + ((k) * 0x004))

/* Error Interrupt CA55 Status Clear Register k */
#define RZV2H_ELC_ERINTA55CLR(k)	(RZV2H_ELC + 0x0348 + ((k) * 0x004))

#endif /* __RZ_SOC_DEF_H__ */
