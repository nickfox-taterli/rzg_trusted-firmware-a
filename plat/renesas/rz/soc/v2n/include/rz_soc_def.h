/*
 * Copyright (c) 2024, Renesas Electronics Corporation. All rights reserved.
 *
 * SPDX-License-Identifier: BSD-3-Clause
 */

#ifndef __RZ_SOC_DEF_H__
#define __RZ_SOC_DEF_H__

#include <lib/utils_def.h>

#define RZV2N_BOOT_ROM_BASE			UL(0x00000000)
#define RZV2N_SRAM0_BASE			UL(0x08000000)
#define RZV2N_SRAM2_BASE			UL(0x08100000)
#define RZV2N_DEVICE_BASE			UL(0x10000000)
#define RZV2N_ELC					UL(0x10400000)
#define RZV2N_GPIO_BASE				UL(0x10410000)
#define RZV2N_CPG_BASE				UL(0x10420000)
#define RZV2N_SYSC_BASE				UL(0x10430000)
#define RZV2N_OTP_BASE				UL(0x10450000)
#define RZV2N_TZC400_SRAM_0_1		UL(0x10460000)
#define RZV2N_TZC400_xSPI_BASE		UL(0x10470000)
#define RZV2N_MHU_BASE				UL(0x10480000)

#define RZV2N_TSU0_BASE				UL(0x11000000)

#define RZV2N_XSPI_BASE				UL(0x11030000)

#define	RZV2N_I2C_8_BASE			UL(0x11C01000)
#define RZV2N_SCIF_BASE				UL(0x11C01400)

#define RZV2N_TZC400_DDR0_BASE		UL(0x13C60000)
#define RZV2N_TZC400_DDR1_BASE		UL(0x13C70000)

#define RZV2N_TZC400_SRAM2A_BASE	UL(0x13CB0000)
#define RZV2N_TZC400_PCIe_BASE		UL(0x13CC0000)

#define RZV2N_SYC_BASE				UL(0x14010000)

#define RZV2N_GIC_BASE				UL(0x14900000)

#define RZV2N_USB20_PHY_BASE		UL(0x15830000)

#define RZV2N_SD0_BASE				UL(0x15C00000)
#define RZV2N_SD1_BASE				UL(0x15C10000)
#define RZV2N_SD2_BASE				UL(0x15C20000)

#define RZV2N_DDR_PHY_BASE			UL(0x1A000000)
#define RZV2N_DDR_MEMC_BASE			UL(0x1E000000)

#define RZV2N_XSPI_MEMORY_MAP_BASE	ULL(0x20000000)
#define RZV2N_PCIe_MIRROR_BASE		ULL(0x30000000)
#define RZV2N_DDR_BASE				ULL(0x40000000)
#define RZV2N_TZC400_RCPU_BASE		UL(0x13CA0000)
#define RZV2N_PCIe_BASE				ULL(0x440000000)

#define RZV2N_GICD_BASE				(RZV2N_GIC_BASE)
#define RZV2N_GICR_BASE				(RZV2N_GIC_BASE + 0x00040000)

#define RZV2N_SRAM_BASE				RZV2N_SRAM0_BASE

#define RZV2N_SRAM_SIZE				UL(0x00080000)
#define RZV2N_BOOT_ROM_SIZE			(0x00020000 - RZV2N_BOOT_ROM_BASE)
#define RZV2N_MSRAM_SIZE			(RZV2N_SRAM_SIZE*2)
#define RZV2N_ASRAM_SIZE			RZV2N_SRAM_SIZE
#define RZV2N_DEVICE_SIZE			(0x20000000 - RZV2N_DEVICE_BASE)
#define RZV2N_XSPI_SIZE				(RZV2N_PCIe_MIRROR_BASE - RZV2N_XSPI_MEMORY_MAP_BASE)
#define RZV2N_DDR_SIZE				ULL(0x200000000)	/* 8GBytes */

#define RZV2N_BL2_END_OFFSET		UL(0x00060000)		/* This value is not checked/enforced anywhwere */
/*
 * eSD boot mode has 4096 sectors. Therefore 4096 x 512bytes = 0x1000 x 0x200 = 0x200000.
 * 0x200000 - FIP start offset (RZV2N_BL2_END_OFFSET) = 0x200000 - 0x60000 = 0x1A0000 = 1.7MB
 */
#define RZV2N_FIP_SIZE_MAX			UL(0x001A0000)

#define RZV2N_SPIROM_FIP_BASE		(RZV2N_XSPI_MEMORY_MAP_BASE + RZV2N_BL2_END_OFFSET)
#define RZV2N_SPIROM_FIP_SIZE		RZV2N_FIP_SIZE_MAX

#define RZV2N_EMMC_FIP_BASE			RZV2N_BL2_END_OFFSET
#define RZV2N_EMMC_FIP_SIZE			RZV2N_FIP_SIZE_MAX

#define RZV2N_SD_FIP_BASE			RZV2N_BL2_END_OFFSET
#define RZV2N_SD_FIP_SIZE			RZV2N_FIP_SIZE_MAX

#define RZV2N_SPIROM_DDR_CFG_BASE	(RZV2N_SPIROM_FIP_BASE + RZV2N_FIP_SIZE_MAX + 0x00000001)
#define RZV2N_DDR_CONFIG_MAX		UL(0x00001000)

#define RZV2N_SYC_INCK_HZ			UL(24000000)
#define RZV2N_UART_INCK_HZ			UL(100000000)

#define RZV2N_UART_BARDRATE			UL(115200)

/* Boot Info base address for BL2 */
#define RZV2N_BOOTINFO_BASE			RZV2N_SRAM2_BASE
#define RZV2N_BOOTINFO_SIZE			UL(0x1000)

/* Definitions used in common code */

/* Base address where parameters to BL31 are stored */
#define PARAMS_BASE					BL2_LIMIT
#define PARAMS_SIZE					UL(0x1000)
#define RZ_SOC_BOOTINFO_BASE		RZV2N_BOOTINFO_BASE
#define BOOT_KIND_BASE				PARAMS_BASE

#define RZ_SOC_SYC_BASE				RZV2N_SYC_BASE

#define RZ_SOC_GICD_BASE			RZV2N_GICD_BASE
#define RZ_SOC_GICR_BASE			RZV2N_GICR_BASE

#define RZ_SOC_SPIROM_FIP_BASE		RZV2N_SPIROM_FIP_BASE
#define RZ_SOC_SPIROM_FIP_SIZE		RZV2N_SPIROM_FIP_SIZE

#define RZ_SOC_EMMC_FIP_BASE		RZV2N_EMMC_FIP_BASE
#define RZ_SOC_EMMC_FIP_SIZE		RZV2N_EMMC_FIP_SIZE

#define RZ_SOC_SD_FIP_BASE			RZV2N_SD_FIP_BASE
#define RZ_SOC_SD_FIP_SIZE			RZV2N_SD_FIP_SIZE

#define RZ_SOC_SPIROM_DDR_CFG_BASE	RZV2N_SPIROM_DDR_CFG_BASE
#define RZ_SOC_SPIROM_DDR_CFG_SIZE	RZV2N_DDR_CONFIG_MAX

#define RZ_SOC_OTP_BASE_PRODUCTID	SYS_LSI_PRR						/* OTPPRODUCT */

#define RZ_SOC_OTP_BASE_CHIPID		(RZV2N_OTP_BASE + 0x114C)		/* OTPCPID0 */
#define RZ_SOC_I2C_PMIC_BASE		RZV2N_I2C_8_BASE

#define SYS_BASE					RZV2N_SYSC_BASE
#define PFC_BASE					RZV2N_GPIO_BASE
#define CPG_BASE					RZV2N_CPG_BASE
#define XSPI_BASE					RZV2N_XSPI_BASE

/* eMMC registers */
#define MMC0_SD_BASE				RZV2N_SD0_BASE
#define MMC1_SD_BASE				RZV2N_SD1_BASE
#define MMC2_SD_BASE				RZV2N_SD2_BASE

#define SYS_PCIE_REG_OFFSET_START	UL(0x1000)						/* Offset corresponds to register SYS_PCIE_INTX_CH0 */
#define SYS_PCIE_REG_OFFSET_END		UL(0x1054)						/* Offset corresponds to register SYS_PCIE_MODE_CH1 */

/* Offset corresponds to register SYS_LSI_OTPTSU0TRMVAL0 */
#define SYS_TSU_REG_OFFSET_START	UL(0x0320)
/* Offset corresponds to register SYS_LSI_OTPTSU1TRMVAL1 */
#define SYS_TSU_REG_OFFSET_END		UL(0x0334)

/* Error Interrupt CM33 Status Register k */
#define RZV2N_ELC_ERINTM33CTL(k)	(RZV2N_ELC + 0x0304 + ((k) * 0x004))

/* Error Interrupt CM33 Status Clear Register k */
#define RZV2N_ELC_ERINTM33CLR(k)	(RZV2N_ELC + 0x0314 + ((k) * 0x004))

/* Error Interrupt CA55 Status Register k */
#define RZV2N_ELC_ERINTA55CTL(k)	(RZV2N_ELC + 0x0338 + ((k) * 0x004))

/* Error Interrupt CA55 Status Clear Register k */
#define RZV2N_ELC_ERINTA55CLR(k)	(RZV2N_ELC + 0x0348 + ((k) * 0x004))

#endif /* __RZ_SOC_DEF_H__ */
